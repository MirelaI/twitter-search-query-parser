# https://dev.twitter.com/rest/public/search
grammar Query

    # Query Shape Rules

    # One or more operators makes up a query
    root        <- __* value:query __*          <Value>
    query       <- (value:operator __*)+        <And>

    operator    <- excluding
                 / including

    excluding   <- "-" value:base                               <Excluding>
    including   <- "" value:(or / base)                         <Including>

    # Operators can be grouped with an OR operator in pairs.
    # I'm not sure if this is the ideal way to do this with PEG
    # but it works for now.
    or          <- value:orable or_groups                       <Or>
    or_groups   <- (or_sep value:orable)+                       <Values>
    orable      <- "" value:base                                <Including>

    base        <- group
                 / list
                 / pair
                 / exact
                 / hashtag
                 / mention
                 / word

    group       <- "(" root ")"                                 <Group>

    # Query Syntax Rules

    pair        <- k:slug               sep v:word              <Pair>
    list        <- "list"               sep list_name           <List>
    exact       <- '"' value:([^\"]*) '"'                       <Exactly>
    hashtag     <- "#" tag                                      <Text>
    mention     <- "@" screen_name                              <Text>
    word        <- [^\s\)\(]+                                        <Text>

    # Utility Rules

    or_sep      <- __+ "OR" __+
    list_name   <- screen_name "/" list_slug
    list_slug   <- [a-z-]+
    screen_name <- slug
    # There's probably a better way to do this
    date        <- d d d d "-" d d "-" d d
    # This is clearly wrong â€” needs to account for unicode
    tag         <- slug
    slug        <- [a-zA-Z0-9_]+
    sep         <- ":"
    integer     <- d d*
    d           <- [0-9]
    __          <- [\s]
